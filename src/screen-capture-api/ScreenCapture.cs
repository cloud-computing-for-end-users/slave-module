using System;
using System.Diagnostics;
using System.IO;
using screen_capture_api.FFMPEG;
using screen_capture_api.Model;
using screen_capture_api.WindowUtilities;

namespace screen_capture_api
{
    public class ScreenCapture
    {
        const string imgPath = @"img.jpg";
        private const string PATH_TO_PYTHON = "";

        public PathToScreen StartScreenCaptureProcess(string appName, OS operatingSystem)
        {
            if(OS.Windows == operatingSystem)
            {
                //var windowUtils = new WindowUtils();
                var window = WindowUtils.GetWindow(appName);
                WindowUtils.PositionWindow(window);
                // TODO OS.Windows only now
                //new FFMPEGRunner().RunFFMPEG(OS.Windows, windowUtils.GetWindowPosition(window), imgPath);



                //TODO start python process that generated images
                ProcessStartInfo start = new ProcessStartInfo();
                start.FileName = PATH_TO_PYTHON;
                //start.Arguments = string.Format("\"{0}\" \"{1}\"", cmd, args);
                start.UseShellExecute = false;// Do not use OS shell
                start.CreateNoWindow = true; // We don't need new window
                start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
                start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
                using (Process process = Process.Start(start))
                {
                    using (StreamReader reader = process.StandardOutput)
                    {
                        string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
                        string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
                        //return result;
                    }
                }


            }
            else
            {
                throw new NotSupportedException("The ScreenCapture does not currently support the linux operating system");
            }




            return new PathToScreen(Directory.GetCurrentDirectory() + "\\" + imgPath);
        }
    }
}
